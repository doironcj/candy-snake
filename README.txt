Caleb Doiron and Andrew Hall 
Candy Python
Candy Python is a 2D snake survival game where the objective is to get as large as possible by eating round pellets without colliding with yourself or the red boundary lines. The snake is implemented with a buffer that saves positions of where the snake head has been for a select number of previous frames. These positions are used to interpolate the segments following the snake head. The snakeâ€™s velocity is dependent on time instead of frame rate by calculating the difference in time between each frame. There are three buffers that the fragment shaders draw from. The bound buffer is the coordinates that define the bounds of which the snake must not collide with. This is drawn with a red line. The second buffer is for the circular shape of the pellets drawn with a triangle fan. The third buffer is for the polygons that make up the snake with the last two vectors representing the location of the eyes. The angular velocity of the turns is limited, and the snake will follow the mouse or can be steered with the 'a' and 'd' keys. For each frame, the snake head position is tested for collision with the other objects in the scene. If the snake head collides with itself or the boundary lines, the game ends. If the snake collides with a pellet, the pellet disappears, and the snake grows by two segments. The pellet count remains constant with randomly generated positions.
